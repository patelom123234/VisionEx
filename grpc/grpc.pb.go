// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: grpc/grpc.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Language int32

const (
	// Unspecified language.
	Language_LANGUAGE_UNSPECIFIED Language = 0
	// American English (United States). en-US.
	Language_LANGUAGE_EN_US Language = 1
	// Korean (South Korea). ko-KR.
	Language_LANGUAGE_KO_KR Language = 2
	// Japanese (Japan). ja-JP.
	Language_LANGUAGE_JA_JP Language = 3
)

// Enum value maps for Language.
var (
	Language_name = map[int32]string{
		0: "LANGUAGE_UNSPECIFIED",
		1: "LANGUAGE_EN_US",
		2: "LANGUAGE_KO_KR",
		3: "LANGUAGE_JA_JP",
	}
	Language_value = map[string]int32{
		"LANGUAGE_UNSPECIFIED": 0,
		"LANGUAGE_EN_US":       1,
		"LANGUAGE_KO_KR":       2,
		"LANGUAGE_JA_JP":       3,
	}
)

func (x Language) Enum() *Language {
	p := new(Language)
	*p = x
	return p
}

func (x Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Language) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_grpc_proto_enumTypes[0].Descriptor()
}

func (Language) Type() protoreflect.EnumType {
	return &file_grpc_grpc_proto_enumTypes[0]
}

func (x Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Language.Descriptor instead.
func (Language) EnumDescriptor() ([]byte, []int) {
	return file_grpc_grpc_proto_rawDescGZIP(), []int{0}
}

type Model int32

const (
	// Unspecified model.
	Model_MODEL_UNSPECIFIED Model = 0
	// Model for GPT-4o.
	Model_MODEL_GPT4O Model = 1
	// Model for GPT-4o Mini.
	Model_MODEL_GPT4O_MINI Model = 2
	// Model for Gemini Flash.
	Model_MODEL_GEMINI_FLASH Model = 3
)

// Enum value maps for Model.
var (
	Model_name = map[int32]string{
		0: "MODEL_UNSPECIFIED",
		1: "MODEL_GPT4O",
		2: "MODEL_GPT4O_MINI",
		3: "MODEL_GEMINI_FLASH",
	}
	Model_value = map[string]int32{
		"MODEL_UNSPECIFIED":  0,
		"MODEL_GPT4O":        1,
		"MODEL_GPT4O_MINI":   2,
		"MODEL_GEMINI_FLASH": 3,
	}
)

func (x Model) Enum() *Model {
	p := new(Model)
	*p = x
	return p
}

func (x Model) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Model) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_grpc_proto_enumTypes[1].Descriptor()
}

func (Model) Type() protoreflect.EnumType {
	return &file_grpc_grpc_proto_enumTypes[1]
}

func (x Model) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Model.Descriptor instead.
func (Model) EnumDescriptor() ([]byte, []int) {
	return file_grpc_grpc_proto_rawDescGZIP(), []int{1}
}

type TranslateTextFromImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The image shows which sentence were detected as square.
	Image []byte `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// Target language for translation. E.g., ko-KR
	TargetLanguage Language `protobuf:"varint,2,opt,name=target_language,json=targetLanguage,proto3,enum=visionex.grpc.Language" json:"target_language,omitempty"`
}

func (x *TranslateTextFromImageRequest) Reset() {
	*x = TranslateTextFromImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranslateTextFromImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslateTextFromImageRequest) ProtoMessage() {}

func (x *TranslateTextFromImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslateTextFromImageRequest.ProtoReflect.Descriptor instead.
func (*TranslateTextFromImageRequest) Descriptor() ([]byte, []int) {
	return file_grpc_grpc_proto_rawDescGZIP(), []int{0}
}

func (x *TranslateTextFromImageRequest) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *TranslateTextFromImageRequest) GetTargetLanguage() Language {
	if x != nil {
		return x.TargetLanguage
	}
	return Language_LANGUAGE_UNSPECIFIED
}

type TranslateTextFromImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The image shows which sentence were detected as square.
	UriImage string `protobuf:"bytes,1,opt,name=uri_image,json=uriImage,proto3" json:"uri_image,omitempty"`
	// The translated sentences.
	Sentences []*Sentence `protobuf:"bytes,2,rep,name=sentences,proto3" json:"sentences,omitempty"`
}

func (x *TranslateTextFromImageResponse) Reset() {
	*x = TranslateTextFromImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_grpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranslateTextFromImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslateTextFromImageResponse) ProtoMessage() {}

func (x *TranslateTextFromImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_grpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslateTextFromImageResponse.ProtoReflect.Descriptor instead.
func (*TranslateTextFromImageResponse) Descriptor() ([]byte, []int) {
	return file_grpc_grpc_proto_rawDescGZIP(), []int{1}
}

func (x *TranslateTextFromImageResponse) GetUriImage() string {
	if x != nil {
		return x.UriImage
	}
	return ""
}

func (x *TranslateTextFromImageResponse) GetSentences() []*Sentence {
	if x != nil {
		return x.Sentences
	}
	return nil
}

type Sentence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The original text. E.g., 안녕하세요
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// The translated text. E.g., Hello
	TranslatedText string `protobuf:"bytes,2,opt,name=translated_text,json=translatedText,proto3" json:"translated_text,omitempty"`
}

func (x *Sentence) Reset() {
	*x = Sentence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_grpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sentence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sentence) ProtoMessage() {}

func (x *Sentence) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_grpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sentence.ProtoReflect.Descriptor instead.
func (*Sentence) Descriptor() ([]byte, []int) {
	return file_grpc_grpc_proto_rawDescGZIP(), []int{2}
}

func (x *Sentence) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Sentence) GetTranslatedText() string {
	if x != nil {
		return x.TranslatedText
	}
	return ""
}

type TranslateToMarkdownRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Target language for translation.
	TargetLanguage Language `protobuf:"varint,2,opt,name=target_language,json=targetLanguage,proto3,enum=visionex.grpc.Language" json:"target_language,omitempty"`
	// Model to be used for create Markdown.
	Model Model `protobuf:"varint,3,opt,name=model,proto3,enum=visionex.grpc.Model" json:"model,omitempty"`
	// The image to be translated into Markdown format.
	Image []byte `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *TranslateToMarkdownRequest) Reset() {
	*x = TranslateToMarkdownRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_grpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranslateToMarkdownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslateToMarkdownRequest) ProtoMessage() {}

func (x *TranslateToMarkdownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_grpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslateToMarkdownRequest.ProtoReflect.Descriptor instead.
func (*TranslateToMarkdownRequest) Descriptor() ([]byte, []int) {
	return file_grpc_grpc_proto_rawDescGZIP(), []int{3}
}

func (x *TranslateToMarkdownRequest) GetTargetLanguage() Language {
	if x != nil {
		return x.TargetLanguage
	}
	return Language_LANGUAGE_UNSPECIFIED
}

func (x *TranslateToMarkdownRequest) GetModel() Model {
	if x != nil {
		return x.Model
	}
	return Model_MODEL_UNSPECIFIED
}

func (x *TranslateToMarkdownRequest) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

type TranslateToImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Target language for translation.
	TargetLanguage Language `protobuf:"varint,2,opt,name=target_language,json=targetLanguage,proto3,enum=visionex.grpc.Language" json:"target_language,omitempty"`
	// The image to be translated into Markdown format.
	Image []byte `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *TranslateToImageRequest) Reset() {
	*x = TranslateToImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_grpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranslateToImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslateToImageRequest) ProtoMessage() {}

func (x *TranslateToImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_grpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslateToImageRequest.ProtoReflect.Descriptor instead.
func (*TranslateToImageRequest) Descriptor() ([]byte, []int) {
	return file_grpc_grpc_proto_rawDescGZIP(), []int{4}
}

func (x *TranslateToImageRequest) GetTargetLanguage() Language {
	if x != nil {
		return x.TargetLanguage
	}
	return Language_LANGUAGE_UNSPECIFIED
}

func (x *TranslateToImageRequest) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

type TranslateToMarkdownResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The translated Markdown.
	// E.g., "# Example Title\nThis is an example paragraph.".
	Markdown string `protobuf:"bytes,1,opt,name=markdown,proto3" json:"markdown,omitempty"`
}

func (x *TranslateToMarkdownResponse) Reset() {
	*x = TranslateToMarkdownResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_grpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranslateToMarkdownResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslateToMarkdownResponse) ProtoMessage() {}

func (x *TranslateToMarkdownResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_grpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslateToMarkdownResponse.ProtoReflect.Descriptor instead.
func (*TranslateToMarkdownResponse) Descriptor() ([]byte, []int) {
	return file_grpc_grpc_proto_rawDescGZIP(), []int{5}
}

func (x *TranslateToMarkdownResponse) GetMarkdown() string {
	if x != nil {
		return x.Markdown
	}
	return ""
}

type TranslateToImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The translated image in URI format.
	// Currently only PNG format will be returned.
	// E.g., "data:image/png;base64,..."
	UriImage string `protobuf:"bytes,1,opt,name=uri_image,json=uriImage,proto3" json:"uri_image,omitempty"`
}

func (x *TranslateToImageResponse) Reset() {
	*x = TranslateToImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_grpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranslateToImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslateToImageResponse) ProtoMessage() {}

func (x *TranslateToImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_grpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslateToImageResponse.ProtoReflect.Descriptor instead.
func (*TranslateToImageResponse) Descriptor() ([]byte, []int) {
	return file_grpc_grpc_proto_rawDescGZIP(), []int{6}
}

func (x *TranslateToImageResponse) GetUriImage() string {
	if x != nil {
		return x.UriImage
	}
	return ""
}

type SignInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Google OpenID token of the user. E.g., "abcdef123ghijk"
	GoogleOpenIdToken string `protobuf:"bytes,1,opt,name=google_open_id_token,json=googleOpenIdToken,proto3" json:"google_open_id_token,omitempty"`
}

func (x *SignInRequest) Reset() {
	*x = SignInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_grpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInRequest) ProtoMessage() {}

func (x *SignInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_grpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInRequest.ProtoReflect.Descriptor instead.
func (*SignInRequest) Descriptor() ([]byte, []int) {
	return file_grpc_grpc_proto_rawDescGZIP(), []int{7}
}

func (x *SignInRequest) GetGoogleOpenIdToken() string {
	if x != nil {
		return x.GoogleOpenIdToken
	}
	return ""
}

type SignInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A Bearer token that must be set in the "Authorization" header for every follow-up request. E.g., "Bearer abc123"
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *SignInResponse) Reset() {
	*x = SignInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_grpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInResponse) ProtoMessage() {}

func (x *SignInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_grpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInResponse.ProtoReflect.Descriptor instead.
func (*SignInResponse) Descriptor() ([]byte, []int) {
	return file_grpc_grpc_proto_rawDescGZIP(), []int{8}
}

func (x *SignInResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

var File_grpc_grpc_proto protoreflect.FileDescriptor

var file_grpc_grpc_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0d, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x22, 0x77, 0x0a, 0x1d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78,
	0x74, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x74, 0x0a, 0x1e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x72, 0x69, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x72, 0x69, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x74,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x74,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22,
	0x47, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x1a, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x4d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4a, 0x04, 0x08, 0x01, 0x10,
	0x02, 0x22, 0x77, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x6f,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0f,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x78,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x0e,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x39, 0x0a, 0x1b, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x4d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x72,
	0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x72,
	0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x22, 0x37, 0x0a, 0x18, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x72, 0x69, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x72, 0x69, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x40,
	0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2f, 0x0a, 0x14, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69,
	0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x26, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2a, 0x60, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12,
	0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x4e, 0x5f, 0x55, 0x53,
	0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x4b,
	0x4f, 0x5f, 0x4b, 0x52, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41,
	0x47, 0x45, 0x5f, 0x4a, 0x41, 0x5f, 0x4a, 0x50, 0x10, 0x03, 0x2a, 0x5d, 0x0a, 0x05, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x4f,
	0x44, 0x45, 0x4c, 0x5f, 0x47, 0x50, 0x54, 0x34, 0x4f, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4d,
	0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x47, 0x50, 0x54, 0x34, 0x4f, 0x5f, 0x4d, 0x49, 0x4e, 0x49, 0x10,
	0x02, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x47, 0x45, 0x4d, 0x49, 0x4e,
	0x49, 0x5f, 0x46, 0x4c, 0x41, 0x53, 0x48, 0x10, 0x03, 0x32, 0xa3, 0x03, 0x0a, 0x08, 0x56, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x12, 0x65, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x26, 0x2e, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a,
	0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x4d, 0x61, 0x72, 0x6b,
	0x64, 0x6f, 0x77, 0x6e, 0x12, 0x29, 0x2e, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x78, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x6f,
	0x4d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x4d, 0x61, 0x72, 0x6b, 0x64,
	0x6f, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a,
	0x16, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x46, 0x72,
	0x6f, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x2e, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x78,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x78, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e,
	0x12, 0x1c, 0x2e, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x65, 0x78, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x78, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_grpc_proto_rawDescOnce sync.Once
	file_grpc_grpc_proto_rawDescData = file_grpc_grpc_proto_rawDesc
)

func file_grpc_grpc_proto_rawDescGZIP() []byte {
	file_grpc_grpc_proto_rawDescOnce.Do(func() {
		file_grpc_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_grpc_proto_rawDescData)
	})
	return file_grpc_grpc_proto_rawDescData
}

var file_grpc_grpc_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_grpc_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_grpc_grpc_proto_goTypes = []any{
	(Language)(0),                          // 0: visionex.grpc.Language
	(Model)(0),                             // 1: visionex.grpc.Model
	(*TranslateTextFromImageRequest)(nil),  // 2: visionex.grpc.TranslateTextFromImageRequest
	(*TranslateTextFromImageResponse)(nil), // 3: visionex.grpc.TranslateTextFromImageResponse
	(*Sentence)(nil),                       // 4: visionex.grpc.Sentence
	(*TranslateToMarkdownRequest)(nil),     // 5: visionex.grpc.TranslateToMarkdownRequest
	(*TranslateToImageRequest)(nil),        // 6: visionex.grpc.TranslateToImageRequest
	(*TranslateToMarkdownResponse)(nil),    // 7: visionex.grpc.TranslateToMarkdownResponse
	(*TranslateToImageResponse)(nil),       // 8: visionex.grpc.TranslateToImageResponse
	(*SignInRequest)(nil),                  // 9: visionex.grpc.SignInRequest
	(*SignInResponse)(nil),                 // 10: visionex.grpc.SignInResponse
}
var file_grpc_grpc_proto_depIdxs = []int32{
	0,  // 0: visionex.grpc.TranslateTextFromImageRequest.target_language:type_name -> visionex.grpc.Language
	4,  // 1: visionex.grpc.TranslateTextFromImageResponse.sentences:type_name -> visionex.grpc.Sentence
	0,  // 2: visionex.grpc.TranslateToMarkdownRequest.target_language:type_name -> visionex.grpc.Language
	1,  // 3: visionex.grpc.TranslateToMarkdownRequest.model:type_name -> visionex.grpc.Model
	0,  // 4: visionex.grpc.TranslateToImageRequest.target_language:type_name -> visionex.grpc.Language
	6,  // 5: visionex.grpc.VisionEx.TranslateToImage:input_type -> visionex.grpc.TranslateToImageRequest
	5,  // 6: visionex.grpc.VisionEx.TranslateToMarkdown:input_type -> visionex.grpc.TranslateToMarkdownRequest
	2,  // 7: visionex.grpc.VisionEx.TranslateTextFromImage:input_type -> visionex.grpc.TranslateTextFromImageRequest
	9,  // 8: visionex.grpc.VisionEx.SignIn:input_type -> visionex.grpc.SignInRequest
	8,  // 9: visionex.grpc.VisionEx.TranslateToImage:output_type -> visionex.grpc.TranslateToImageResponse
	7,  // 10: visionex.grpc.VisionEx.TranslateToMarkdown:output_type -> visionex.grpc.TranslateToMarkdownResponse
	3,  // 11: visionex.grpc.VisionEx.TranslateTextFromImage:output_type -> visionex.grpc.TranslateTextFromImageResponse
	10, // 12: visionex.grpc.VisionEx.SignIn:output_type -> visionex.grpc.SignInResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_grpc_grpc_proto_init() }
func file_grpc_grpc_proto_init() {
	if File_grpc_grpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_grpc_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TranslateTextFromImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_grpc_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TranslateTextFromImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_grpc_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Sentence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_grpc_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*TranslateToMarkdownRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_grpc_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*TranslateToImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_grpc_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*TranslateToMarkdownResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_grpc_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*TranslateToImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_grpc_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SignInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_grpc_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SignInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_grpc_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_grpc_proto_goTypes,
		DependencyIndexes: file_grpc_grpc_proto_depIdxs,
		EnumInfos:         file_grpc_grpc_proto_enumTypes,
		MessageInfos:      file_grpc_grpc_proto_msgTypes,
	}.Build()
	File_grpc_grpc_proto = out.File
	file_grpc_grpc_proto_rawDesc = nil
	file_grpc_grpc_proto_goTypes = nil
	file_grpc_grpc_proto_depIdxs = nil
}
