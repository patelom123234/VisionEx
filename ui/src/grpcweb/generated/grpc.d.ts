/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.28.2
 * source: grpc.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
import * as grpc_web_1 from "grpc-web";
export declare namespace visionex.grpc {
    enum Language {
        LANGUAGE_UNSPECIFIED = 0,
        LANGUAGE_EN_US = 1,
        LANGUAGE_KO_KR = 2,
        LANGUAGE_JA_JP = 3
    }
    enum Model {
        MODEL_UNSPECIFIED = 0,
        MODEL_GPT4O = 1,
        MODEL_GPT4O_MINI = 2,
        MODEL_GEMINI_FLASH = 3
    }
    class TranslateTextFromImageRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            image?: Uint8Array;
            targetLanguage?: Language;
        });
        get image(): Uint8Array;
        set image(value: Uint8Array);
        get targetLanguage(): Language;
        set targetLanguage(value: Language);
        static fromObject(data: {
            image?: Uint8Array;
            targetLanguage?: Language;
        }): TranslateTextFromImageRequest;
        toObject(): {
            image?: Uint8Array;
            targetLanguage?: Language;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TranslateTextFromImageRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): TranslateTextFromImageRequest;
    }
    class TranslateTextFromImageResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            uriImage?: string;
            sentences?: Sentence[];
        });
        get uriImage(): string;
        set uriImage(value: string);
        get sentences(): Sentence[];
        set sentences(value: Sentence[]);
        static fromObject(data: {
            uriImage?: string;
            sentences?: ReturnType<typeof Sentence.prototype.toObject>[];
        }): TranslateTextFromImageResponse;
        toObject(): {
            uriImage?: string;
            sentences?: ReturnType<typeof Sentence.prototype.toObject>[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TranslateTextFromImageResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): TranslateTextFromImageResponse;
    }
    class Sentence extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            text?: string;
            translatedText?: string;
        });
        get text(): string;
        set text(value: string);
        get translatedText(): string;
        set translatedText(value: string);
        static fromObject(data: {
            text?: string;
            translatedText?: string;
        }): Sentence;
        toObject(): {
            text?: string;
            translatedText?: string;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Sentence;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): Sentence;
    }
    class TranslateToMarkdownRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            targetLanguage?: Language;
            model?: Model;
            image?: Uint8Array;
        });
        get targetLanguage(): Language;
        set targetLanguage(value: Language);
        get model(): Model;
        set model(value: Model);
        get image(): Uint8Array;
        set image(value: Uint8Array);
        static fromObject(data: {
            targetLanguage?: Language;
            model?: Model;
            image?: Uint8Array;
        }): TranslateToMarkdownRequest;
        toObject(): {
            targetLanguage?: Language;
            model?: Model;
            image?: Uint8Array;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TranslateToMarkdownRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): TranslateToMarkdownRequest;
    }
    class TranslateToImageRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            targetLanguage?: Language;
            image?: Uint8Array;
        });
        get targetLanguage(): Language;
        set targetLanguage(value: Language);
        get image(): Uint8Array;
        set image(value: Uint8Array);
        static fromObject(data: {
            targetLanguage?: Language;
            image?: Uint8Array;
        }): TranslateToImageRequest;
        toObject(): {
            targetLanguage?: Language;
            image?: Uint8Array;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TranslateToImageRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): TranslateToImageRequest;
    }
    class TranslateToMarkdownResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            markdown?: string;
        });
        get markdown(): string;
        set markdown(value: string);
        static fromObject(data: {
            markdown?: string;
        }): TranslateToMarkdownResponse;
        toObject(): {
            markdown?: string;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TranslateToMarkdownResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): TranslateToMarkdownResponse;
    }
    class TranslateToImageResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            uriImage?: string;
        });
        get uriImage(): string;
        set uriImage(value: string);
        static fromObject(data: {
            uriImage?: string;
        }): TranslateToImageResponse;
        toObject(): {
            uriImage?: string;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TranslateToImageResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): TranslateToImageResponse;
    }
    class SignInRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            googleOpenIdToken?: string;
        });
        get googleOpenIdToken(): string;
        set googleOpenIdToken(value: string);
        static fromObject(data: {
            googleOpenIdToken?: string;
        }): SignInRequest;
        toObject(): {
            googleOpenIdToken?: string;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SignInRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): SignInRequest;
    }
    class SignInResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            token?: string;
        });
        get token(): string;
        set token(value: string);
        static fromObject(data: {
            token?: string;
        }): SignInResponse;
        toObject(): {
            token?: string;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SignInResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): SignInResponse;
    }
    abstract class UnimplementedVisionExService {
        static definition: {
            TranslateToImage: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: TranslateToImageRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => TranslateToImageRequest;
                responseSerialize: (message: TranslateToImageResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => TranslateToImageResponse;
            };
            TranslateToMarkdown: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: TranslateToMarkdownRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => TranslateToMarkdownRequest;
                responseSerialize: (message: TranslateToMarkdownResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => TranslateToMarkdownResponse;
            };
            TranslateTextFromImage: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: TranslateTextFromImageRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => TranslateTextFromImageRequest;
                responseSerialize: (message: TranslateTextFromImageResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => TranslateTextFromImageResponse;
            };
            SignIn: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: SignInRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => SignInRequest;
                responseSerialize: (message: SignInResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => SignInResponse;
            };
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract TranslateToImage(call: grpc_1.ServerUnaryCall<TranslateToImageRequest, TranslateToImageResponse>, callback: grpc_1.sendUnaryData<TranslateToImageResponse>): void;
        abstract TranslateToMarkdown(call: grpc_1.ServerUnaryCall<TranslateToMarkdownRequest, TranslateToMarkdownResponse>, callback: grpc_1.sendUnaryData<TranslateToMarkdownResponse>): void;
        abstract TranslateTextFromImage(call: grpc_1.ServerUnaryCall<TranslateTextFromImageRequest, TranslateTextFromImageResponse>, callback: grpc_1.sendUnaryData<TranslateTextFromImageResponse>): void;
        abstract SignIn(call: grpc_1.ServerUnaryCall<SignInRequest, SignInResponse>, callback: grpc_1.sendUnaryData<SignInResponse>): void;
    }
    class VisionExClient {
        private _address;
        private _client;
        constructor(address: string, credentials?: Object, options?: grpc_web_1.GrpcWebClientBaseOptions);
        private static TranslateToImage;
        TranslateToImage(message: TranslateToImageRequest, metadata: grpc_web_1.Metadata | null): Promise<TranslateToImageResponse>;
        private static TranslateToMarkdown;
        TranslateToMarkdown(message: TranslateToMarkdownRequest, metadata: grpc_web_1.Metadata | null): Promise<TranslateToMarkdownResponse>;
        private static TranslateTextFromImage;
        TranslateTextFromImage(message: TranslateTextFromImageRequest, metadata: grpc_web_1.Metadata | null): Promise<TranslateTextFromImageResponse>;
        private static SignIn;
        SignIn(message: SignInRequest, metadata: grpc_web_1.Metadata | null): Promise<SignInResponse>;
    }
}
